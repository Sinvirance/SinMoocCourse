spring.application.name=gateway
server.port=9000
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848

# 路由转发
spring.cloud.gateway.routes[0].id=system
#spring.cloud.gateway.routes[0].uri=http://127.0.0.1:9001
spring.cloud.gateway.routes[0].uri=lb://system
spring.cloud.gateway.routes[0].predicates[0].name=Path
spring.cloud.gateway.routes[0].predicates[0].args[0]=/system/**
# 全局过滤器配置，LoginAdmin为过滤器类的前缀名
spring.cloud.gateway.routes[0].filters[0].name=LoginAdmin
spring.cloud.gateway.routes[0].filters[0].args[0]=true

# 将所有business模块通过9000端口转发
spring.cloud.gateway.routes[1].id=business
 spring.cloud.gateway.routes[1].uri=http://127.0.0.1:9002
# 生成环境与上线环境ip和端口会不同
# lb: loadbalance 负载均衡 使用 lb:business 代替网址和端口，通过后面的business,与注册中心的注册名字关联
#spring.cloud.gateway.routes[1].uri=lb://business
spring.cloud.gateway.routes[1].predicates[0].name=Path
spring.cloud.gateway.routes[1].predicates[0].args[0]=/business/**
spring.cloud.gateway.routes[1].filters[0].name=LoginAdmin
spring.cloud.gateway.routes[1].filters[0].args[0]=true

spring.cloud.gateway.routes[2].id=file
#spring.cloud.gateway.routes[3].uri=http://127.0.0.1:9003
spring.cloud.gateway.routes[2].uri=lb://file
spring.cloud.gateway.routes[2].predicates[0].name=Path
spring.cloud.gateway.routes[2].predicates[0].args[0]=/file/**
spring.cloud.gateway.routes[2].filters[0].name=LoginAdmin
spring.cloud.gateway.routes[2].filters[0].args[0]=true

# redis配置，利用老师的redis,之后自己去购买
spring.redis.host=r-uf6ljbcdaxobsifyctpd.redis.rds.aliyuncs.com
spring.redis.port=6379
spring.redis.password=Redis000